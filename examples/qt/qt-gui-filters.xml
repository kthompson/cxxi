<!--
	This XML filter file format.

	There are 3 different modes:
		Include -> include this type in the generated output
		Exclude -> do not include this type in the generated output. methods using this type will be removed (virtual methods will be stubbed with IntPtr)
		External -> do not include this type in the generated output, but expect an implementation to be provided
			The type of external implementation can be specified:
				class (default) -> this type is implemented as a managed reference type
				struct -> this type is implemented as a managed value type. when passed as pointer or reference, the managed "ref" prefix will be used
		Rename -> include this type in the generated output, but rename to the specified managed type (specified in "to" attribute, "implementation" attribute also allowed)
		
	The default behavior is Include. Change the default by specifying the default attribute on the top-level Filter tag.
	Specify exceptions to the default behavior with child nodes named after one of the modes aboveâ€¦
-->

<Filter default="Exclude">
	<Include>QObject</Include>
	<Include>Qt</Include>
	<Include>Qt::ConnectionType</Include>
	<Include>Qt::KeyboardModifier</Include>
	<Include>Qt::MouseButton</Include>
	<Include>Qt::ButtonState</Include>

	<Include>QApplication</Include>
	<Include>QCoreApplication</Include>
	<Include>QWidget</Include>
	<Include>QAbstractButton</Include>
	<Include>QPushButton</Include>
	<Include>QPaintDevice</Include>

	<Include>QEvent</Include>
	<Include>QInputEvent</Include>
	<Include>QMouseEvent</Include>
	<Include>QTimerEvent</Include>

	<External implementation="struct">QString</External>
	<External implementation="struct">QSize</External>
	<External implementation="struct">QPoint</External>
	<External implementation="struct">QFlags</External>
	 
</Filter>
